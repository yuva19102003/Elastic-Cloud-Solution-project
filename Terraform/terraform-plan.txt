
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # null_resource.efs-backup[0m will be created
[0m  [32m+[0m[0m resource "null_resource" "efs-backup" {
      [32m+[0m[0m id = (known after apply)
    }

[1m  # null_resource.efs-config[0m will be created
[0m  [32m+[0m[0m resource "null_resource" "efs-config" {
      [32m+[0m[0m id = (known after apply)
    }

[1m  # module.asg-tg-attachment.aws_autoscaling_attachment.example[0m will be created
[0m  [32m+[0m[0m resource "aws_autoscaling_attachment" "example" {
      [32m+[0m[0m autoscaling_group_name = "server autoscaling"
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m lb_target_group_arn    = (known after apply)
    }

[1m  # module.autoscaling.aws_autoscaling_group.autoscaling-group[0m will be created
[0m  [32m+[0m[0m resource "aws_autoscaling_group" "autoscaling-group" {
      [32m+[0m[0m arn                              = (known after apply)
      [32m+[0m[0m availability_zones               = (known after apply)
      [32m+[0m[0m default_cooldown                 = (known after apply)
      [32m+[0m[0m desired_capacity                 = 2
      [32m+[0m[0m force_delete                     = true
      [32m+[0m[0m force_delete_warm_pool           = false
      [32m+[0m[0m health_check_grace_period        = 300
      [32m+[0m[0m health_check_type                = "EC2"
      [32m+[0m[0m id                               = (known after apply)
      [32m+[0m[0m ignore_failed_scaling_activities = false
      [32m+[0m[0m launch_configuration             = (known after apply)
      [32m+[0m[0m load_balancers                   = (known after apply)
      [32m+[0m[0m max_size                         = 4
      [32m+[0m[0m metrics_granularity              = "1Minute"
      [32m+[0m[0m min_size                         = 2
      [32m+[0m[0m name                             = "server autoscaling"
      [32m+[0m[0m name_prefix                      = (known after apply)
      [32m+[0m[0m predicted_capacity               = (known after apply)
      [32m+[0m[0m protect_from_scale_in            = false
      [32m+[0m[0m service_linked_role_arn          = (known after apply)
      [32m+[0m[0m target_group_arns                = (known after apply)
      [32m+[0m[0m vpc_zone_identifier              = (known after apply)
      [32m+[0m[0m wait_for_capacity_timeout        = "10m"
      [32m+[0m[0m warm_pool_size                   = (known after apply)
    }

[1m  # module.efs.aws_efs_file_system.efs-file-system[0m will be created
[0m  [32m+[0m[0m resource "aws_efs_file_system" "efs-file-system" {
      [32m+[0m[0m arn                     = (known after apply)
      [32m+[0m[0m availability_zone_id    = (known after apply)
      [32m+[0m[0m availability_zone_name  = (known after apply)
      [32m+[0m[0m creation_token          = "efs"
      [32m+[0m[0m dns_name                = (known after apply)
      [32m+[0m[0m encrypted               = true
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m kms_key_id              = (known after apply)
      [32m+[0m[0m name                    = (known after apply)
      [32m+[0m[0m number_of_mount_targets = (known after apply)
      [32m+[0m[0m owner_id                = (known after apply)
      [32m+[0m[0m performance_mode        = "generalPurpose"
      [32m+[0m[0m size_in_bytes           = (known after apply)
      [32m+[0m[0m tags                    = {
          [32m+[0m[0m "name" = "my-efs"
        }
      [32m+[0m[0m tags_all                = {
          [32m+[0m[0m "name" = "my-efs"
        }
      [32m+[0m[0m throughput_mode         = "bursting"
    }

[1m  # module.efs.aws_efs_mount_target.efs-mount-target[0m will be created
[0m  [32m+[0m[0m resource "aws_efs_mount_target" "efs-mount-target" {
      [32m+[0m[0m availability_zone_id   = (known after apply)
      [32m+[0m[0m availability_zone_name = (known after apply)
      [32m+[0m[0m dns_name               = (known after apply)
      [32m+[0m[0m file_system_arn        = (known after apply)
      [32m+[0m[0m file_system_id         = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_address             = (known after apply)
      [32m+[0m[0m mount_target_dns_name  = (known after apply)
      [32m+[0m[0m network_interface_id   = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m security_groups        = (known after apply)
      [32m+[0m[0m subnet_id              = (known after apply)
    }

[1m  # module.internet-gw-route-maintainance-public-subnet-0.aws_route.internet-gateway-route[0m will be created
[0m  [32m+[0m[0m resource "aws_route" "internet-gateway-route" {
      [32m+[0m[0m destination_cidr_block = "0.0.0.0/0"
      [32m+[0m[0m gateway_id             = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m instance_id            = (known after apply)
      [32m+[0m[0m instance_owner_id      = (known after apply)
      [32m+[0m[0m network_interface_id   = (known after apply)
      [32m+[0m[0m origin                 = (known after apply)
      [32m+[0m[0m route_table_id         = (known after apply)
      [32m+[0m[0m state                  = (known after apply)
    }

[1m  # module.internet-gw-route-production-public-subnet-0.aws_route.internet-gateway-route[0m will be created
[0m  [32m+[0m[0m resource "aws_route" "internet-gateway-route" {
      [32m+[0m[0m destination_cidr_block = "0.0.0.0/0"
      [32m+[0m[0m gateway_id             = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m instance_id            = (known after apply)
      [32m+[0m[0m instance_owner_id      = (known after apply)
      [32m+[0m[0m network_interface_id   = (known after apply)
      [32m+[0m[0m origin                 = (known after apply)
      [32m+[0m[0m route_table_id         = (known after apply)
      [32m+[0m[0m state                  = (known after apply)
    }

[1m  # module.maintainance.aws_internet_gateway.igw[0m will be created
[0m  [32m+[0m[0m resource "aws_internet_gateway" "igw" {
      [32m+[0m[0m arn      = (known after apply)
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m owner_id = (known after apply)
      [32m+[0m[0m tags     = {
          [32m+[0m[0m "Name" = "maintainance-vpc-internet-gateway"
        }
      [32m+[0m[0m tags_all = {
          [32m+[0m[0m "Name" = "maintainance-vpc-internet-gateway"
        }
      [32m+[0m[0m vpc_id   = (known after apply)
    }

[1m  # module.maintainance.aws_subnet.private-subnet[0][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private-subnet" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "172.31.128.0/20"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "maintainance-vpc-private-subnet-us-east-1a"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name" = "maintainance-vpc-private-subnet-us-east-1a"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.maintainance.aws_subnet.public-subnet[0][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public-subnet" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "172.31.0.0/20"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "maintainance-vpc-public-subnet-us-east-1a"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name" = "maintainance-vpc-public-subnet-us-east-1a"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.maintainance.aws_vpc.main[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc" "main" {
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m cidr_block                           = "172.31.0.0/16"
      [32m+[0m[0m default_network_acl_id               = (known after apply)
      [32m+[0m[0m default_route_table_id               = (known after apply)
      [32m+[0m[0m default_security_group_id            = (known after apply)
      [32m+[0m[0m dhcp_options_id                      = (known after apply)
      [32m+[0m[0m enable_dns_hostnames                 = (known after apply)
      [32m+[0m[0m enable_dns_support                   = true
      [32m+[0m[0m enable_network_address_usage_metrics = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_tenancy                     = "default"
      [32m+[0m[0m ipv6_association_id                  = (known after apply)
      [32m+[0m[0m ipv6_cidr_block                      = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_network_border_group = (known after apply)
      [32m+[0m[0m main_route_table_id                  = (known after apply)
      [32m+[0m[0m owner_id                             = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name" = "maintainance-vpc"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name" = "maintainance-vpc"
        }
    }

[1m  # module.maintainance-security-group.aws_security_group.security-group[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "security-group" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Managed by Terraform"
      [32m+[0m[0m egress                 = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = (known after apply)
      [32m+[0m[0m name                   = "maintainance-sg"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "name" = "maintainnace-sg"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "name" = "maintainnace-sg"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.maintainance-sg-inbound-nfs.aws_vpc_security_group_ingress_rule.inbound[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_ingress_rule" "inbound" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "0.0.0.0/0"
      [32m+[0m[0m from_port              = 2049
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "tcp"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags_all               = {}
      [32m+[0m[0m to_port                = 2049
    }

[1m  # module.maintainance-sg-inbound-peering.aws_vpc_security_group_ingress_rule.inbound[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_ingress_rule" "inbound" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "10.0.0.0/16"
      [32m+[0m[0m from_port              = -1
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "icmp"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags_all               = {}
      [32m+[0m[0m to_port                = -1
    }

[1m  # module.maintainance-sg-inbound-ssh.aws_vpc_security_group_ingress_rule.inbound[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_ingress_rule" "inbound" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "0.0.0.0/0"
      [32m+[0m[0m from_port              = 22
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "tcp"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags_all               = {}
      [32m+[0m[0m to_port                = 22
    }

[1m  # module.maintainance-sg-outbound-all-traffic.aws_vpc_security_group_egress_rule.outbound[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_egress_rule" "outbound" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "0.0.0.0/0"
      [32m+[0m[0m from_port              = -1
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "-1"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags_all               = {}
      [32m+[0m[0m to_port                = -1
    }

[1m  # module.nat.aws_eip.nat[0][0m will be created
[0m  [32m+[0m[0m resource "aws_eip" "nat" {
      [32m+[0m[0m allocation_id        = (known after apply)
      [32m+[0m[0m association_id       = (known after apply)
      [32m+[0m[0m carrier_ip           = (known after apply)
      [32m+[0m[0m customer_owned_ip    = (known after apply)
      [32m+[0m[0m domain               = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m instance             = (known after apply)
      [32m+[0m[0m network_border_group = (known after apply)
      [32m+[0m[0m network_interface    = (known after apply)
      [32m+[0m[0m private_dns          = (known after apply)
      [32m+[0m[0m private_ip           = (known after apply)
      [32m+[0m[0m public_dns           = (known after apply)
      [32m+[0m[0m public_ip            = (known after apply)
      [32m+[0m[0m public_ipv4_pool     = (known after apply)
      [32m+[0m[0m tags                 = (known after apply)
      [32m+[0m[0m tags_all             = (known after apply)
      [32m+[0m[0m vpc                  = (known after apply)
    }

[1m  # module.nat.aws_eip.nat[1][0m will be created
[0m  [32m+[0m[0m resource "aws_eip" "nat" {
      [32m+[0m[0m allocation_id        = (known after apply)
      [32m+[0m[0m association_id       = (known after apply)
      [32m+[0m[0m carrier_ip           = (known after apply)
      [32m+[0m[0m customer_owned_ip    = (known after apply)
      [32m+[0m[0m domain               = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m instance             = (known after apply)
      [32m+[0m[0m network_border_group = (known after apply)
      [32m+[0m[0m network_interface    = (known after apply)
      [32m+[0m[0m private_dns          = (known after apply)
      [32m+[0m[0m private_ip           = (known after apply)
      [32m+[0m[0m public_dns           = (known after apply)
      [32m+[0m[0m public_ip            = (known after apply)
      [32m+[0m[0m public_ipv4_pool     = (known after apply)
      [32m+[0m[0m tags                 = (known after apply)
      [32m+[0m[0m tags_all             = (known after apply)
      [32m+[0m[0m vpc                  = (known after apply)
    }

[1m  # module.nat.aws_nat_gateway.nat[0][0m will be created
[0m  [32m+[0m[0m resource "aws_nat_gateway" "nat" {
      [32m+[0m[0m allocation_id                      = (known after apply)
      [32m+[0m[0m association_id                     = (known after apply)
      [32m+[0m[0m connectivity_type                  = "public"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m network_interface_id               = (known after apply)
      [32m+[0m[0m private_ip                         = (known after apply)
      [32m+[0m[0m public_ip                          = (known after apply)
      [32m+[0m[0m secondary_private_ip_address_count = (known after apply)
      [32m+[0m[0m secondary_private_ip_addresses     = (known after apply)
      [32m+[0m[0m subnet_id                          = (known after apply)
      [32m+[0m[0m tags                               = (known after apply)
      [32m+[0m[0m tags_all                           = (known after apply)
    }

[1m  # module.nat.aws_nat_gateway.nat[1][0m will be created
[0m  [32m+[0m[0m resource "aws_nat_gateway" "nat" {
      [32m+[0m[0m allocation_id                      = (known after apply)
      [32m+[0m[0m association_id                     = (known after apply)
      [32m+[0m[0m connectivity_type                  = "public"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m network_interface_id               = (known after apply)
      [32m+[0m[0m private_ip                         = (known after apply)
      [32m+[0m[0m public_ip                          = (known after apply)
      [32m+[0m[0m secondary_private_ip_address_count = (known after apply)
      [32m+[0m[0m secondary_private_ip_addresses     = (known after apply)
      [32m+[0m[0m subnet_id                          = (known after apply)
      [32m+[0m[0m tags                               = (known after apply)
      [32m+[0m[0m tags_all                           = (known after apply)
    }

[1m  # module.nat-gw-route-production-private-subnet-0.aws_route.nat-gateway-route[0m will be created
[0m  [32m+[0m[0m resource "aws_route" "nat-gateway-route" {
      [32m+[0m[0m destination_cidr_block = "0.0.0.0/0"
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m instance_id            = (known after apply)
      [32m+[0m[0m instance_owner_id      = (known after apply)
      [32m+[0m[0m nat_gateway_id         = (known after apply)
      [32m+[0m[0m network_interface_id   = (known after apply)
      [32m+[0m[0m origin                 = (known after apply)
      [32m+[0m[0m route_table_id         = (known after apply)
      [32m+[0m[0m state                  = (known after apply)
    }

[1m  # module.nat-gw-route-production-private-subnet-1.aws_route.nat-gateway-route[0m will be created
[0m  [32m+[0m[0m resource "aws_route" "nat-gateway-route" {
      [32m+[0m[0m destination_cidr_block = "0.0.0.0/0"
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m instance_id            = (known after apply)
      [32m+[0m[0m instance_owner_id      = (known after apply)
      [32m+[0m[0m nat_gateway_id         = (known after apply)
      [32m+[0m[0m network_interface_id   = (known after apply)
      [32m+[0m[0m origin                 = (known after apply)
      [32m+[0m[0m route_table_id         = (known after apply)
      [32m+[0m[0m state                  = (known after apply)
    }

[1m  # module.peering-route-maintainance-private-subnet-0.aws_route.peering-connection-route[0m will be created
[0m  [32m+[0m[0m resource "aws_route" "peering-connection-route" {
      [32m+[0m[0m destination_cidr_block    = "10.0.0.0/16"
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m instance_id               = (known after apply)
      [32m+[0m[0m instance_owner_id         = (known after apply)
      [32m+[0m[0m network_interface_id      = (known after apply)
      [32m+[0m[0m origin                    = (known after apply)
      [32m+[0m[0m route_table_id            = (known after apply)
      [32m+[0m[0m state                     = (known after apply)
      [32m+[0m[0m vpc_peering_connection_id = (known after apply)
    }

[1m  # module.peering-route-production-private-subnet-0.aws_route.peering-connection-route[0m will be created
[0m  [32m+[0m[0m resource "aws_route" "peering-connection-route" {
      [32m+[0m[0m destination_cidr_block    = "172.31.0.0/16"
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m instance_id               = (known after apply)
      [32m+[0m[0m instance_owner_id         = (known after apply)
      [32m+[0m[0m network_interface_id      = (known after apply)
      [32m+[0m[0m origin                    = (known after apply)
      [32m+[0m[0m route_table_id            = (known after apply)
      [32m+[0m[0m state                     = (known after apply)
      [32m+[0m[0m vpc_peering_connection_id = (known after apply)
    }

[1m  # module.peering-route-production-private-subnet-1.aws_route.peering-connection-route[0m will be created
[0m  [32m+[0m[0m resource "aws_route" "peering-connection-route" {
      [32m+[0m[0m destination_cidr_block    = "172.31.0.0/16"
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m instance_id               = (known after apply)
      [32m+[0m[0m instance_owner_id         = (known after apply)
      [32m+[0m[0m network_interface_id      = (known after apply)
      [32m+[0m[0m origin                    = (known after apply)
      [32m+[0m[0m route_table_id            = (known after apply)
      [32m+[0m[0m state                     = (known after apply)
      [32m+[0m[0m vpc_peering_connection_id = (known after apply)
    }

[1m  # module.peering-vpc.aws_vpc_peering_connection.peering-connection[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_peering_connection" "peering-connection" {
      [32m+[0m[0m accept_status = (known after apply)
      [32m+[0m[0m auto_accept   = true
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m peer_owner_id = (known after apply)
      [32m+[0m[0m peer_region   = (known after apply)
      [32m+[0m[0m peer_vpc_id   = (known after apply)
      [32m+[0m[0m tags_all      = (known after apply)
      [32m+[0m[0m vpc_id        = (known after apply)
    }

[1m  # module.production.aws_internet_gateway.igw[0m will be created
[0m  [32m+[0m[0m resource "aws_internet_gateway" "igw" {
      [32m+[0m[0m arn      = (known after apply)
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m owner_id = (known after apply)
      [32m+[0m[0m tags     = {
          [32m+[0m[0m "Name" = "production-vpc-internet-gateway"
        }
      [32m+[0m[0m tags_all = {
          [32m+[0m[0m "Name" = "production-vpc-internet-gateway"
        }
      [32m+[0m[0m vpc_id   = (known after apply)
    }

[1m  # module.production.aws_subnet.private-subnet[0][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private-subnet" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.1.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "production-vpc-private-subnet-us-east-1a"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name" = "production-vpc-private-subnet-us-east-1a"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.production.aws_subnet.private-subnet[1][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private-subnet" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.2.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "production-vpc-private-subnet-us-east-1b"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name" = "production-vpc-private-subnet-us-east-1b"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.production.aws_subnet.public-subnet[0][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public-subnet" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.3.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "production-vpc-public-subnet-us-east-1a"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name" = "production-vpc-public-subnet-us-east-1a"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.production.aws_subnet.public-subnet[1][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public-subnet" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.4.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "production-vpc-public-subnet-us-east-1b"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name" = "production-vpc-public-subnet-us-east-1b"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.production.aws_vpc.main[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc" "main" {
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m cidr_block                           = "10.0.0.0/16"
      [32m+[0m[0m default_network_acl_id               = (known after apply)
      [32m+[0m[0m default_route_table_id               = (known after apply)
      [32m+[0m[0m default_security_group_id            = (known after apply)
      [32m+[0m[0m dhcp_options_id                      = (known after apply)
      [32m+[0m[0m enable_dns_hostnames                 = (known after apply)
      [32m+[0m[0m enable_dns_support                   = true
      [32m+[0m[0m enable_network_address_usage_metrics = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_tenancy                     = "default"
      [32m+[0m[0m ipv6_association_id                  = (known after apply)
      [32m+[0m[0m ipv6_cidr_block                      = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_network_border_group = (known after apply)
      [32m+[0m[0m main_route_table_id                  = (known after apply)
      [32m+[0m[0m owner_id                             = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name" = "production-vpc"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name" = "production-vpc"
        }
    }

[1m  # module.production-security-group.aws_security_group.security-group[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "security-group" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Managed by Terraform"
      [32m+[0m[0m egress                 = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = (known after apply)
      [32m+[0m[0m name                   = "production-sg"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "name" = "production-sg"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "name" = "production-sg"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.production-sg-inbound-http.aws_vpc_security_group_ingress_rule.inbound[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_ingress_rule" "inbound" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "0.0.0.0/0"
      [32m+[0m[0m from_port              = 80
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "tcp"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags_all               = {}
      [32m+[0m[0m to_port                = 80
    }

[1m  # module.production-sg-inbound-https.aws_vpc_security_group_ingress_rule.inbound[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_ingress_rule" "inbound" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "0.0.0.0/0"
      [32m+[0m[0m from_port              = 443
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "tcp"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags_all               = {}
      [32m+[0m[0m to_port                = 443
    }

[1m  # module.production-sg-inbound-peering.aws_vpc_security_group_ingress_rule.inbound[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_ingress_rule" "inbound" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "172.31.0.0/16"
      [32m+[0m[0m from_port              = -1
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "icmp"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags_all               = {}
      [32m+[0m[0m to_port                = -1
    }

[1m  # module.production-sg-inbound-ssh.aws_vpc_security_group_ingress_rule.inbound[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_ingress_rule" "inbound" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "0.0.0.0/0"
      [32m+[0m[0m from_port              = 22
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "tcp"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags_all               = {}
      [32m+[0m[0m to_port                = 22
    }

[1m  # module.production-sg-outbound-all-traffic.aws_vpc_security_group_egress_rule.outbound[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_egress_rule" "outbound" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "0.0.0.0/0"
      [32m+[0m[0m from_port              = -1
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "-1"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags_all               = {}
      [32m+[0m[0m to_port                = -1
    }

[1m  # module.route-table-maintainance-private-subnet-0.aws_route_table.route-table[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "route-table" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags_all         = (known after apply)
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.route-table-maintainance-public-subnet-0.aws_route_table.route-table[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "route-table" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags_all         = (known after apply)
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.route-table-production-private-subnet-0.aws_route_table.route-table[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "route-table" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags_all         = (known after apply)
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.route-table-production-private-subnet-1.aws_route_table.route-table[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "route-table" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags_all         = (known after apply)
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.route-table-production-public-subnet-0.aws_route_table.route-table[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "route-table" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags_all         = (known after apply)
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.rt-association-maintainance-private-subnet-0.aws_route_table_association.rt-association[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "rt-association" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.rt-association-maintainance-public-subnet-0.aws_route_table_association.rt-association[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "rt-association" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.rt-association-production-private-subnet-0.aws_route_table_association.rt-association[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "rt-association" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.rt-association-production-private-subnet-1.aws_route_table_association.rt-association[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "rt-association" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.rt-association-production-public-subnet.aws_route_table_association.rt-association[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "rt-association" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.rt-association-production-public-subnet-0.aws_route_table_association.rt-association[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "rt-association" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.template.aws_launch_configuration.launch-template[0m will be created
[0m  [32m+[0m[0m resource "aws_launch_configuration" "launch-template" {
      [32m+[0m[0m arn                         = (known after apply)
      [32m+[0m[0m associate_public_ip_address = (known after apply)
      [32m+[0m[0m ebs_optimized               = (known after apply)
      [32m+[0m[0m enable_monitoring           = true
      [32m+[0m[0m iam_instance_profile        = "AmazonSSMRoleForInstancesQuickSetup"
      [32m+[0m[0m id                          = (known after apply)
      [32m+[0m[0m image_id                    = "ami-0cf10cdf9fcd62d37"
      [32m+[0m[0m instance_type               = "t2.micro"
      [32m+[0m[0m key_name                    = "demo"
      [32m+[0m[0m name                        = (known after apply)
      [32m+[0m[0m name_prefix                 = "server-template"
      [32m+[0m[0m security_groups             = (known after apply)
      [32m+[0m[0m user_data                   = "db194d2fe1f7d5c7c511b2178846c32aef99cc5f"
    }

[1m  # module.tg-alb.aws_lb.application-load-balancer[0m will be created
[0m  [32m+[0m[0m resource "aws_lb" "application-load-balancer" {
      [32m+[0m[0m arn                                                          = (known after apply)
      [32m+[0m[0m arn_suffix                                                   = (known after apply)
      [32m+[0m[0m desync_mitigation_mode                                       = "defensive"
      [32m+[0m[0m dns_name                                                     = (known after apply)
      [32m+[0m[0m drop_invalid_header_fields                                   = false
      [32m+[0m[0m enable_deletion_protection                                   = true
      [32m+[0m[0m enable_http2                                                 = true
      [32m+[0m[0m enable_tls_version_and_cipher_suite_headers                  = false
      [32m+[0m[0m enable_waf_fail_open                                         = false
      [32m+[0m[0m enable_xff_client_port                                       = false
      [32m+[0m[0m enforce_security_group_inbound_rules_on_private_link_traffic = (known after apply)
      [32m+[0m[0m id                                                           = (known after apply)
      [32m+[0m[0m idle_timeout                                                 = 60
      [32m+[0m[0m internal                                                     = false
      [32m+[0m[0m ip_address_type                                              = (known after apply)
      [32m+[0m[0m load_balancer_type                                           = "application"
      [32m+[0m[0m name                                                         = "server-laod-balancer"
      [32m+[0m[0m name_prefix                                                  = (known after apply)
      [32m+[0m[0m preserve_host_header                                         = false
      [32m+[0m[0m security_groups                                              = (known after apply)
      [32m+[0m[0m subnets                                                      = (known after apply)
      [32m+[0m[0m tags_all                                                     = (known after apply)
      [32m+[0m[0m vpc_id                                                       = (known after apply)
      [32m+[0m[0m xff_header_processing_mode                                   = "append"
      [32m+[0m[0m zone_id                                                      = (known after apply)
    }

[1m  # module.tg-alb.aws_lb_listener.alb-listener[0m will be created
[0m  [32m+[0m[0m resource "aws_lb_listener" "alb-listener" {
      [32m+[0m[0m arn               = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m load_balancer_arn = (known after apply)
      [32m+[0m[0m port              = 80
      [32m+[0m[0m protocol          = "HTTP"
      [32m+[0m[0m ssl_policy        = (known after apply)
      [32m+[0m[0m tags_all          = (known after apply)

      [32m+[0m[0m default_action {
          [32m+[0m[0m order            = (known after apply)
          [32m+[0m[0m target_group_arn = (known after apply)
          [32m+[0m[0m type             = "forward"
        }
    }

[1m  # module.tg-alb.aws_lb_target_group.target-group[0m will be created
[0m  [32m+[0m[0m resource "aws_lb_target_group" "target-group" {
      [32m+[0m[0m arn                                = (known after apply)
      [32m+[0m[0m arn_suffix                         = (known after apply)
      [32m+[0m[0m connection_termination             = (known after apply)
      [32m+[0m[0m deregistration_delay               = "300"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m ip_address_type                    = (known after apply)
      [32m+[0m[0m lambda_multi_value_headers_enabled = false
      [32m+[0m[0m load_balancing_algorithm_type      = (known after apply)
      [32m+[0m[0m load_balancing_anomaly_mitigation  = (known after apply)
      [32m+[0m[0m load_balancing_cross_zone_enabled  = (known after apply)
      [32m+[0m[0m name                               = "server-target-group"
      [32m+[0m[0m name_prefix                        = (known after apply)
      [32m+[0m[0m port                               = 80
      [32m+[0m[0m preserve_client_ip                 = (known after apply)
      [32m+[0m[0m protocol                           = "HTTP"
      [32m+[0m[0m protocol_version                   = (known after apply)
      [32m+[0m[0m proxy_protocol_v2                  = false
      [32m+[0m[0m slow_start                         = 0
      [32m+[0m[0m tags_all                           = (known after apply)
      [32m+[0m[0m target_type                        = "instance"
      [32m+[0m[0m vpc_id                             = (known after apply)
    }

[1mPlan:[0m 54 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m alb-dns-name                                             = (known after apply)
  [32m+[0m[0m asg-arn                                                  = (known after apply)
  [32m+[0m[0m asg-id                                                   = (known after apply)
  [32m+[0m[0m asg-name                                                 = "server autoscaling"
  [32m+[0m[0m maintainance-igw-id                                      = (known after apply)
  [32m+[0m[0m maintainance-private-subnet-id                           = [
      [32m+[0m[0m (known after apply),
    ]
  [32m+[0m[0m maintainance-public-subnet-id                            = [
      [32m+[0m[0m (known after apply),
    ]
  [32m+[0m[0m maintainance-sg-id                                       = (known after apply)
  [32m+[0m[0m maintainance-vpc                                         = (known after apply)
  [32m+[0m[0m nat-gw-id                                                = [
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
    ]
  [32m+[0m[0m production-igw-id                                        = (known after apply)
  [32m+[0m[0m production-private-subnet-id                             = [
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
    ]
  [32m+[0m[0m production-public-subnet-id                              = [
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
    ]
  [32m+[0m[0m production-sg-id                                         = (known after apply)
  [32m+[0m[0m production-vpc                                           = (known after apply)
  [32m+[0m[0m route-table-maintainance-private-subnet-0-route-table-id = (known after apply)
  [32m+[0m[0m route-table-maintainance-public-subnet-0-route-table-id  = (known after apply)
  [32m+[0m[0m route-table-production-private-subnet-0-id               = (known after apply)
  [32m+[0m[0m route-table-production-private-subnet-1-id               = (known after apply)
  [32m+[0m[0m route-table-production-public-subnet-0-id                = (known after apply)
  [32m+[0m[0m template-id                                              = (known after apply)
  [32m+[0m[0m tg-arn                                                   = (known after apply)
  [32m+[0m[0m tg-id                                                    = (known after apply)
  [32m+[0m[0m vpc-peering-connection-id                                = (known after apply)
[90m
─────────────────────────────────────────────────────────────────────────────[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
